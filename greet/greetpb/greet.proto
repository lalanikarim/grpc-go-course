syntax = "proto3";

package greet;
option go_package="./greetpb";

message Greeting {
  string first_name = 1;
  string last_name = 2;
}

message GreetRequest {
  Greeting greeting = 1;
}

message GreetResponse {
  string result = 1;
}

message GreetManyTimesRequest {
  Greeting greeting = 1;
}

message GreetManyTimesResponse {
  string result = 1;
}

message GreetEveryoneRequest {
  Greeting greeting = 1;
}

message GreetEveryoneResponse {
  string result = 1;
}

message LongGreetRequest {
  Greeting greeting = 1;
}

message LongGreetResponse {
  string result = 1;
}

message SumRequest {
  int64 operand_1 = 1;
  int64 operand_2 = 2;
}

message SumResponse {
  int64 result = 1;
}

message PrimeNumberDecompositionRequest {
  int64 number = 1;
}

message PrimeNumberDecompositionResponse {
  int64 result = 1;
}

message AverageRequest {
  int64 number = 1;
}

message AverageResponse {
  float average = 1;
}

message FindMaxRequest {
  int64 number = 1;
}

message FindMaxResponse {
  int64 maximum = 1;
}

service GreetService {
  // Unary
  rpc Greet(GreetRequest) returns (GreetResponse) {};
  rpc Sum(SumRequest) returns (SumResponse) {};

  // Server Streaming
  rpc GreetManyTimes(GreetManyTimesRequest) returns (stream GreetManyTimesResponse) {};
  rpc PrimeNumberDecomposition(PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse) {};

  // Client Streaming
  rpc LongGreet(stream LongGreetRequest) returns (LongGreetResponse) {};
  rpc Average(stream AverageRequest) returns (AverageResponse) {};

  // Bi directional Streaming
  rpc GreetEveryone(stream GreetEveryoneRequest) returns (stream GreetEveryoneResponse) {};
  rpc FindMax(stream FindMaxRequest) returns (stream FindMaxResponse) {};
}
